{"version":3,"sources":["./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/guards/login.guard.ts","./src/app/components/admin/brand/brand.component.html","./src/app/components/admin/brand/brand.component.ts","./src/app/components/car/car-filter/car-filter.component.html","./src/app/components/car/car-filter/car-filter.component.ts","./src/app/components/admin/color/color-add/color-add.component.ts","./src/app/components/admin/color/color-add/color-add.component.html","./src/app/services/customer.service.ts","./src/app/services/credit-card.service.ts","./src/app/components/admin/car-admin/car-add/car-add.component.ts","./src/app/components/admin/car-admin/car-add/car-add.component.html","./src/app/services/color.service.ts","./src/app/components/admin/customer/customer.component.html","./src/app/components/admin/customer/customer.component.ts","./src/app/services/rental-detail.service.ts","./src/environments/environment.ts","./src/app/store/auth/auth.actions.ts","./src/app/services/car.service.ts","./src/app/services/local-storage.service.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/admin/color/color-update/color-update.component.ts","./src/app/components/admin/color/color-update/color-update.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/admin/color/color.component.html","./src/app/components/admin/color/color.component.ts","./src/app/components/admin/brand/brand-add/brand-add.component.ts","./src/app/components/admin/brand/brand-add/brand-add.component.html","./src/app/components/car/car.component.ts","./src/app/components/car/car.component.html","./src/app/interceptors/auth.interceptor.ts","./src/app/store/app.reducer.ts","./src/app/services/brand.service.ts","./src/app/services/car-detail.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/admin/car-admin/car-admin.component.ts","./src/app/components/admin/car-admin/car-admin.component.html","./src/app/guards/admin.guard.ts","./src/app/components/rental/rental.component.html","./src/app/components/rental/rental.component.ts","./src/app/components/admin/car-admin/car-images/car-images.component.ts","./src/app/components/admin/car-admin/car-images/car-images.component.html","./src/app/app.module.ts","./src/app/components/user/update/update.component.ts","./src/app/components/user/update/update.component.html","./src/app/components/car/car-detail/car-detail.component.ts","./src/app/components/car/car-detail/car-detail.component.html","./src/app/services/rental.service.ts","./src/app/components/admin/brand/brand-update/brand-update.component.ts","./src/app/components/admin/brand/brand-update/brand-update.component.html","./src/app/components/rental/rental-add/rental-add.component.html","./src/app/components/rental/rental-add/rental-add.component.ts","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/components/payment/payment.component.ts","./src/app/components/payment/payment.component.html","./src/app/services/auth.service.ts","./src/app/store/auth/auth.reducer.ts","./src/app/components/car/car-card/car-card.component.html","./src/app/components/car/car-card/car-card.component.ts","./src/app/services/user.service.ts","./src/app/services/payment.service.ts","./src/app/app-routing.module.ts","./src/app/components/navi/navi.component.html","./src/app/components/navi/navi.component.ts","./src/app/components/admin/car-admin/car-update/car-update.component.ts","./src/app/components/admin/car-admin/car-update/car-update.component.html","./src/app/components/user/register/register.component.ts","./src/app/components/user/register/register.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p class=\"lead\">\r\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Vero animi ullam quod possimus. Quaerat, sint!\r\n    Reprehenderit fuga sed quisquam pariatur exercitationem facere deleniti deserunt, natus, tenetur totam aperiam sit\r\n    tempora quod, et veniam qui repellat atque voluptatum quis nihil. Ipsam officiis cumque doloribus consequatur\r\n    laboriosam perferendis molestiae placeat porro similique et nisi deserunt ipsum voluptates itaque expedita illum sit\r\n    dolor distinctio temporibus earum est, perspiciatis delectus dignissimos quidem. Corrupti aut dolor eos magnam\r\n    dolore aliquam, earum in inventore ex sunt iste temporibus minus quaerat distinctio praesentium dignissimos cumque\r\n    tenetur perspiciatis, voluptates quibusdam maxime, numquam provident sapiente. Iste, aliquid, odio unde inventore\r\n    modi maxime expedita animi recusandae tenetur voluptates fugiat nam nobis praesentium quos sunt laborum? Provident\r\n    repudiandae voluptatem adipisci cupiditate eius cum veritatis ipsum enim, tenetur corrupti perspiciatis. Aspernatur\r\n    illum quidem ea inventore corporis! Voluptatum nemo fugiat iusto praesentium esse assumenda sapiente, eligendi\r\n    molestias dolorem distinctio fugit quam unde sunt dignissimos necessitatibus accusamus itaque illum quos cupiditate,\r\n    enim provident? Natus eius sed sapiente, alias sunt pariatur deleniti necessitatibus facilis atque quibusdam eum\r\n    eligendi. Repudiandae, eaque? Cumque aliquam harum vitae magni atque voluptates asperiores quas, iste, facere\r\n    laudantium ab! Dolores dolore quis eaque, iusto modi dignissimos a distinctio facilis nobis ad veritatis harum\r\n    minima soluta perspiciatis nulla laborum consequuntur doloribus architecto eligendi magnam ipsam accusantium optio!\r\n    Dicta assumenda consequuntur, quos voluptatem quam facilis, omnis tenetur, molestiae eveniet aliquid labore rem\r\n    necessitatibus iusto laborum odio similique sequi. Velit dolorem error blanditiis autem distinctio, magni voluptatem\r\n    quisquam aliquid? Assumenda amet nostrum mollitia consequatur.\r\n</p>","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  UrlTree,\n} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private toastrService: ToastrService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      this.toastrService.info('Sisteme giriş yapmalısınız');\n      return false;\n    }\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Markalar Listesi\r\n                <button routerLink='/admin/brands/add' class=\"btn btn-success float-right\">Ekle</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-3\">\r\n                    <input id=\"brandFilter\" type=\"text\" class=\"form-control\" [(ngModel)]=\"brandFilter.brandName\"\r\n                        placeholder=\"Arama yapmak istediğiniz markayı yazınız\">\r\n                </div>\r\n                <ul class=\"list-group\">\r\n                    <li class=\"list-group-item\" routerLink=\"/admin/brands/update/{{brand.brandId}}\"\r\n                        *ngFor=\"let brand of brands| filterBy: brandFilter\">\r\n                        {{brand.brandName}}</li>\r\n                    <li class=\"list-group-item\" *ngIf=\"(brands | filterBy: brandFilter).length === 0\">Herhangi bir marka bulunamadı\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-3\"></div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Brand } from 'src/app/models/entities/brand';\r\nimport { BrandService } from 'src/app/services/brand.service';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brand.component.html',\r\n  styleUrls: ['./brand.component.css'],\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  brands: Brand[] = [];\r\n  dataLoaded = false;\r\n  brandFilter: any = { brandName: '' };\r\n\r\n  constructor(private brandService: BrandService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getBrands();\r\n  }\r\n\r\n  getBrands() {\r\n    this.brandService.getBrands().subscribe((response) => {\r\n      this.brands = response.data;\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-header text-center\">\r\n        Araç Filtrele\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div class=\"row g-3 justify-content-evenly\">\r\n            <label for=\"filterBrand\" class=\"form-label\">Marka</label>\r\n            <select [(ngModel)]=\"filterBrand\" class=\"form-control form-select mb-3\" name=\"filterBrand\" id=\"filterBrand\"\r\n                aria-label=\".form-select-lg example\">\r\n                <option *ngFor=\"let brand of brands\" [selected]=\"getSelectedBrand(brand.brandId)\"\r\n                    [value]=\"brand.brandId\">{{brand.brandName}}</option>\r\n            </select>\r\n            <label for=\"filterColor\" class=\"form-label\">Renk</label>\r\n            <select [(ngModel)]=\"filterColor\" class=\"form-control form-select mb-3\" name=\"filterColor\" id=\"filterColor\"\r\n                aria-label=\".form-select-lg example\">\r\n                <option *ngFor=\"let color of colors\" [selected]=\"getSelectedColor(color.colorId)\"\r\n                    [value]=\"color.colorId\">{{color.colorName}}</option>\r\n            </select>\r\n            <div class=\"col-lg-auto col-sm-12\">\r\n                <button *ngIf=\"!filterBrand || !filterColor\" type=\"button\" class=\"btn btn-success mr-5\"\r\n                    disabled>Filtrele</button>\r\n                <button *ngIf=\"filterBrand && filterColor\" type=\"button\" class=\"btn btn-success mr-5\"\r\n                    routerLink=\"/cars/{{filterColor}}/{{filterBrand}}\">Filtrele</button>\r\n                <button *ngIf=\"!filterBrand || !filterColor\" type=\"button\" class=\"btn btn-danger\" routerLink=\"/cars\"\r\n                    disabled>Temizle</button>\r\n                <button *ngIf=\"filterBrand && filterColor\" type=\"button\" class=\"btn btn-danger\"\r\n                    routerLink=\"/cars\">Temizle</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Brand } from 'src/app/models/entities/brand';\r\nimport { Color } from 'src/app/models/entities/color';\r\nimport { BrandService } from 'src/app/services/brand.service';\r\nimport { ColorService } from 'src/app/services/color.service';\r\n\r\n@Component({\r\n  selector: 'app-car-filter',\r\n  templateUrl: './car-filter.component.html',\r\n  styleUrls: ['./car-filter.component.css'],\r\n})\r\nexport class CarFilterComponent implements OnInit {\r\n  colors: Color[] = [];\r\n  brands: Brand[] = [];\r\n  filterColor: number;\r\n  filterBrand: number;\r\n  selectedColor: number;\r\n  selectedBrand: number;\r\n\r\n  constructor(\r\n    private colorService: ColorService,\r\n    private brandService: BrandService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getBrands();\r\n    this.getColors();\r\n  }\r\n  getColors() {\r\n    this.colorService.getColors().subscribe((response) => {\r\n      this.colors = response.data;\r\n    });\r\n  }\r\n  getBrands() {\r\n    this.brandService.getBrands().subscribe((response) => {\r\n      this.brands = response.data;\r\n    });\r\n  }\r\n  getSelectedColor(colorId: number) {\r\n    if (this.filterColor == colorId) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  getSelectedBrand(brandId: number) {\r\n    if (this.filterBrand == brandId) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  setSelectedColor(colorId: number) {\r\n    this.selectedColor = colorId;\r\n  }\r\n  setSelectedBrand(brandId: number) {\r\n    this.selectedBrand = brandId;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ColorService } from 'src/app/services/color.service';\r\n\r\n@Component({\r\n  selector: 'app-color-add',\r\n  templateUrl: './color-add.component.html',\r\n  styleUrls: ['./color-add.component.css'],\r\n})\r\nexport class ColorAddComponent implements OnInit {\r\n  colorAddForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastrService: ToastrService,\r\n    private colorService: ColorService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createColorAddForm();\r\n  }\r\n  createColorAddForm() {\r\n    this.colorAddForm = this.formBuilder.group({\r\n      colorName: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  add() {\r\n    if (this.colorAddForm.valid) {\r\n      let colorModel = Object.assign({}, this.colorAddForm.value);\r\n      this.colorService.add(colorModel).subscribe(\r\n        (response) => {\r\n          setTimeout(() => {\r\n            this.router.navigate(['admin/colors']);\r\n          }, 1000);\r\n          this.toastrService.success(response.message, 'Başarılı');\r\n        },\r\n        (responseError) => {\r\n          if (responseError.error.Errors.length > 0) {\r\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n              this.toastrService.error(\r\n                responseError.error.Errors[i].ErrorMessage,\r\n                'Doğrulama hatası'\r\n              );\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.toastrService.error('Tüm alanları doldurmak zorunludur', 'Uyarı');\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"content\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <h5 class=\"title\">Renk Ekle</h5>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"colorAddForm\">\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"colorName\" class=\"fore-label\">Renk Adı</label>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" id=\"colorName\" formControlName=\"colorName\"\r\n                                        placeholder=\"Renk Adı\" class=\"form-control\" />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <button class=\"btn btn-fill btn-danger\" (click)=\"add()\">Ekle</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-3\"></div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Customer } from '../models/entities/customer';\r\nimport { ListResponseModel } from '../models/listResponseModel';\r\nimport { ResponseModel } from '../models/responseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getCustomers(): Observable<ListResponseModel<Customer>> {\r\n    return this.httpClient.get<ListResponseModel<Customer>>(\r\n      environment.apiUrl + 'customers'\r\n    );\r\n  }\r\n\r\n  add(customer: Customer): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'customers/add',\r\n      customer\r\n    );\r\n  }\r\n\r\n  update(customer: Customer): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'customers/update',\r\n      customer\r\n    );\r\n  }\r\n\r\n  delete(customer: Customer) {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'customers/delete',\r\n      customer\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { CreditCard } from '../models/entities/creditCard';\nimport { ListResponseModel } from '../models/listResponseModel';\nimport { ResponseModel } from '../models/responseModel';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreditCardService {\n  constructor(private httpClient: HttpClient) {}\n\n  getAllByUserId(userId: number): Observable<ListResponseModel<CreditCard>> {\n    return this.httpClient.get<ListResponseModel<CreditCard>>(\n      environment.apiUrl + 'creditcards/getallbyuserid?userId=' + userId\n    );\n  }\n\n  add(creditCard: CreditCard): Observable<ResponseModel> {\n    return this.httpClient.post<ResponseModel>(\n      environment.apiUrl + 'creditcards/add',\n      creditCard\n    );\n  }\n\n  update(creditCard: CreditCard): Observable<ResponseModel> {\n    return this.httpClient.post<ResponseModel>(\n      environment.apiUrl + 'creditcards/update',\n      creditCard\n    );\n  }\n\n  delete(creditCard: CreditCard): Observable<ResponseModel> {\n    return this.httpClient.post<ResponseModel>(\n      environment.apiUrl + 'creditcards/delete',\n      creditCard\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Brand } from 'src/app/models/entities/brand';\r\nimport { Color } from 'src/app/models/entities/color';\r\nimport { BrandService } from 'src/app/services/brand.service';\r\nimport { CarService } from 'src/app/services/car.service';\r\nimport { ColorService } from 'src/app/services/color.service';\r\n\r\n@Component({\r\n  selector: 'app-car-add',\r\n  templateUrl: './car-add.component.html',\r\n  styleUrls: ['./car-add.component.css'],\r\n})\r\nexport class CarAddComponent implements OnInit {\r\n  carAddForm: FormGroup;\r\n  colors: Color[] = [];\r\n  brands: Brand[] = [];\r\n  brandLoaded: boolean = false;\r\n  colorLoaded: boolean = false;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastrService: ToastrService,\r\n    private brandService: BrandService,\r\n    private colorService: ColorService,\r\n    private carService: CarService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createCarAddForm();\r\n    this.getBrands();\r\n    this.getColors();\r\n  }\r\n\r\n  createCarAddForm() {\r\n    this.carAddForm = this.formBuilder.group({\r\n      brandId: ['', Validators.required],\r\n      colorId: ['', Validators.required],\r\n      modelYear: ['', Validators.required],\r\n      dailyPrice: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      findeksScore: [\r\n        '',\r\n        [Validators.required, Validators.min(0), Validators.max(1900)],\r\n      ],\r\n    });\r\n  }\r\n\r\n  add() {\r\n    if (this.carAddForm.valid) {\r\n      let carModel = Object.assign({}, this.carAddForm.value);\r\n      this.carService.add(carModel).subscribe(\r\n        (response) => {\r\n          this.toastrService.success(response.message, 'Başarılı');\r\n          setTimeout(() => {\r\n            this.router.navigate(['admin/cars']);\r\n          }, 1000);\r\n        },\r\n        (responseError) => {\r\n          if (responseError.error.Errors.length > 0) {\r\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n              this.toastrService.error(\r\n                responseError.error.Errors[i].ErrorMessage,\r\n                'Doğrulama hatası'\r\n              );\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.toastrService.error('Tüm alanları doldurmak zorunludur', 'Uyarı');\r\n    }\r\n  }\r\n\r\n  getBrands() {\r\n    this.brandService.getBrands().subscribe((response) => {\r\n      this.brands = response.data;\r\n      this.brandLoaded = true;\r\n    });\r\n  }\r\n\r\n  getColors() {\r\n    this.colorService.getColors().subscribe((response) => {\r\n      this.colors = response.data;\r\n      this.colorLoaded = true;\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n    <div *ngIf=\"!brandLoaded !colorLoaded\" class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"content\" *ngIf='brandLoaded colorLoaded'>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3 \"></div>\r\n        <div class=\"col-md-6 \">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"title\">Araç Ekle</h5>\r\n                </div>\r\n\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"carAddForm\">\r\n\r\n                        <div class=\"mb3\">\r\n                            <label for=\"brandId\" class=\"form-label\">Brand</label>\r\n                            <select class=\"form-control form-select mb-3\" name=\"brandId\" id=\"brandId\" type=\"number\"\r\n                                formControlName=\"brandId\" aria-label=\".form-select-lg example\">\r\n                                <option *ngFor=\"let brand of brands\" [ngValue]=\"brand.brandId\">{{brand.brandName}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"mb3\">\r\n                            <label for=\"colorId\" class=\"form-label\">Color</label>\r\n                            <select class=\"form-control form-select mb-3\" name=\"colorId\" id=\"colorId\"\r\n                                formControlName=\"colorId\" aria-label=\".form-select-lg example\">\r\n                                <option *ngFor=\"let color of colors\" [ngValue]=\"color.colorId\">{{color.colorName}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"modelYear\">Model Year</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"number\" id=\"modelYear\" formControlName=\"modelYear\" placeholder=\"Model Year\"\r\n                                    class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"dailyPrice\">Daily Price</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"number\" id=\"dailyPrice\" formControlName=\"dailyPrice\"\r\n                                    placeholder=\"Daily Price\" class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"findeksScore\">Findeks Score</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"number\" id=\"findeksScore\" formControlName=\"findeksScore\"\r\n                                    placeholder=\"Findeks Score\" class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"description\" class=\"fore-label\">Description</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" id=\"description\" formControlName=\"description\"\r\n                                    placeholder=\"Description\" class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button class=\"btn btn-fill btn-danger\" (click)=\"add()\">Ekle</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Color } from '../models/entities/color';\r\nimport { ListResponseModel } from '../models/listResponseModel';\r\nimport { ResponseModel } from '../models/responseModel';\r\nimport { SingleResponseModel } from '../models/singleResponseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ColorService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getColors(): Observable<ListResponseModel<Color>> {\r\n    return this.httpClient.get<ListResponseModel<Color>>(\r\n      environment.apiUrl + 'colors'\r\n    );\r\n  }\r\n\r\n  getColorById(colorId: number): Observable<SingleResponseModel<Color>> {\r\n    return this.httpClient.get<SingleResponseModel<Color>>(\r\n      environment.apiUrl + 'colors/getbyid?colorId=' + colorId\r\n    );\r\n  }\r\n\r\n  add(color: Color): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'colors/add',\r\n      color\r\n    );\r\n  }\r\n\r\n  update(color: Color): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'colors/update',\r\n      color\r\n    );\r\n  }\r\n\r\n  delete(color: Color) {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'colors/delete',\r\n      color\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"!dataLoaded\" class=\"spinner-border text-primary\" role=\"status\">\r\n    <span class=\"sr-only\">Loading...</span>\r\n</div>\r\n\r\n<table class=\"table\" *ngIf=\"dataLoaded\">\r\n    <thead>\r\n        <tr>\r\n            <th>ID</th>\r\n            <th>User ID</th>\r\n            <th>Firma Adı</th>\r\n        </tr>\r\n    </thead>\r\n    <tr *ngFor=\"let customer of customers\">\r\n        <td>{{customer.customerId}}</td>\r\n        <td>{{customer.userId}}</td>\r\n        <td>{{customer.companyName}}</td>\r\n    </tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from 'src/app/models/entities/customer';\r\nimport { CustomerService } from 'src/app/services/customer.service';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  customers:Customer[] = [];\r\n  dataLoaded = false;\r\n\r\n  constructor(private customerService:CustomerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCustomers();\r\n  }\r\n  getCustomers() {\r\n    this.customerService.getCustomers().subscribe(response => {\r\n      this.customers = response.data;\r\n      this.dataLoaded = true;\r\n    })\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { RentalDetailDto } from '../models/dtos/rentalDetailDto';\r\nimport { ListResponseModel } from '../models/listResponseModel';\r\nimport { SingleResponseModel } from '../models/singleResponseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RentalDetailService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getRentalDetails(): Observable<ListResponseModel<RentalDetailDto>> {\r\n    return this.httpClient.get<ListResponseModel<RentalDetailDto>>(\r\n      environment.apiUrl + 'rentals/details'\r\n    );\r\n  }\r\n\r\n  getRentalDetailsById(\r\n    rentalId: number\r\n  ): Observable<SingleResponseModel<RentalDetailDto>> {\r\n    let newPath =\r\n      environment.apiUrl + 'rentals/detailsbyrentalid?rentalId=' + rentalId;\r\n    return this.httpClient.get<SingleResponseModel<RentalDetailDto>>(newPath);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:44356/api/',\r\n  baseUrl: 'https://localhost:44356/',\r\n};\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { UserDetailDto } from '../../models/dtos/userDetailDto';\r\n\r\nexport const setUserDetail = createAction(\r\n  'Set UserDetail',\r\n  props<{ userDetailDto: UserDetailDto }>()\r\n);\r\n\r\nexport const deleteUserDetail = createAction('Delete User Detail');","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Car } from '../models/entities/car';\r\nimport { ResponseModel } from '../models/responseModel';\r\nimport { SingleResponseModel } from '../models/singleResponseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getCarById(carId: number): Observable<SingleResponseModel<Car>> {\r\n    let newPath = environment.apiUrl + 'cars/getbyid?carId=' + carId;\r\n    return this.httpClient.get<SingleResponseModel<Car>>(newPath);\r\n  }\r\n\r\n  add(car: Car): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'cars/add',\r\n      car\r\n    );\r\n  }\r\n\r\n  update(car: Car): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'cars/update',\r\n      car\r\n    );\r\n  }\r\n\r\n  delete(car: Car) {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'cars/delete',\r\n      car\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  isLocalStorageSupported!: boolean;\n  localStorage!: Storage;\n\n  constructor() {\n    this.isLocalStorageSupported =\n      typeof window['localStorage'] != 'undefined' &&\n      window['localStorage'] != null;\n    if (this.isLocalStorageSupported) {\n      this.localStorage = window.localStorage;\n    }\n  }\n\n  get<T>(key: string): T | null {\n    if (this.isLocalStorageSupported) {\n      let item: string | null = this.localStorage.getItem(key);\n      let result: T | null = item ? JSON.parse(item) : null;\n      return result;\n    }\n    return null;\n  }\n\n  set(key: string, value: any) {\n    if (this.isLocalStorageSupported) {\n      this.localStorage.setItem(key, JSON.stringify(value));\n    }\n  }\n\n  remove(key: string) {\n    if (this.isLocalStorageSupported) {\n      this.localStorage.removeItem(key);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"lead\">\n    Böyle bir sayfa yok. Hiç olmadı ki..\n</p>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Color } from 'src/app/models/entities/color';\r\nimport { ColorService } from 'src/app/services/color.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-color-update',\r\n  templateUrl: './color-update.component.html',\r\n  styleUrls: ['./color-update.component.css'],\r\n})\r\nexport class ColorUpdateComponent implements OnInit {\r\n  color: Color;\r\n  colorUpdateForm: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private colorService: ColorService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toastrService: ToastrService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      if (params['colorId']) {\r\n        this.getColorById(params['colorId']);\r\n      }\r\n    });\r\n  }\r\n\r\n  createColorUpdateForm(color: Color) {\r\n    this.colorUpdateForm = this.formBuilder.group({\r\n      colorId: [color.colorId, Validators.required],\r\n      colorName: [color.colorName, Validators.required],\r\n    });\r\n  }\r\n\r\n  getColorById(colorId: number) {\r\n    this.colorService.getColorById(colorId).subscribe((response) => {\r\n      this.color = response.data;\r\n      this.createColorUpdateForm(this.color);\r\n    });\r\n  }\r\n\r\n  update() {\r\n    if (this.colorUpdateForm.valid) {\r\n      let colorModel = Object.assign({}, this.colorUpdateForm.value);\r\n      this.colorService.update(colorModel).subscribe(\r\n        (response) => {\r\n          setTimeout(() => {\r\n            this.router.navigate(['admin/colors']);\r\n          }, 1000);\r\n          this.toastrService.success(response.message, 'Başarılı');\r\n        },\r\n        (responseError) => {\r\n          if (responseError.error.Errors.length > 0) {\r\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n              this.toastrService.error(\r\n                responseError.error.Errors[i].ErrorMessage,\r\n                'Doğrulama hatası'\r\n              );\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.toastrService.error('Tüm alanları doldurmak zorunludur', 'Uyarı');\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    this.colorService.delete(this.color).subscribe(\r\n      (response) => {\r\n        setTimeout(() => {\r\n          this.router.navigate(['admin/colors']);\r\n        }, 1000);\r\n        this.toastrService.info(response.message, 'Başarılı');\r\n      },\r\n      (responseError) => {\r\n        if (responseError.error.Errors.length > 0) {\r\n          for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n            this.toastrService.error(\r\n              responseError.error.Errors[i].ErrorMessage,\r\n              'Doğrulama hatası'\r\n            );\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"title\">Renk Güncelle</h5>\r\n                </div>\r\n\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"colorUpdateForm\" *ngIf='color'>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"colorName\" class=\"fore-label\">Renk Adı</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" id=\"colorName\" formControlName=\"colorName\" placeholder=\"Renk Adı\"\r\n                                    class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button class=\"btn btn-fill btn-success\" (click)=\"update()\">Güncelle</button>\r\n                    <button class=\"btn btn-fill btn-danger float-right\" (click)=\"delete()\">Sil</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n    <div class=\"footer py-3 mt-3\">\r\n        <div class=\"container\">\r\n            <span class=\"copyright\">\r\n                <!-- class=\"text-muted\" -->\r\n                Muboys Copyright © 2020. Her Hakkı Saklıdır.\r\n            </span>\r\n        </div>\r\n    </div>\r\n</footer>","<div class=\"row\">\r\n    <div class=\"col-md-3\"></div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Renk\r\n                <button routerLink='/admin/colors/add' class=\"btn btn-success float-right\">Ekle</button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-3\">\r\n                    <input id=\"colorFilter\" type=\"text\" class=\"form-control\" [(ngModel)]=\"colorFilter.colorName\"\r\n                        placeholder=\"Arama yapmak istediğiniz rengi yazınız\">\r\n                </div>\r\n                <ul class=\"list-group\">\r\n                    <li class=\"list-group-item\" routerLink=\"/admin/colors/update/{{color.colorId}}\"\r\n                        *ngFor=\"let color of colors| filterBy: colorFilter\">\r\n                        {{color.colorName}}</li>\r\n                    <li class=\"list-group-item\" *ngIf=\"(colors | filterBy: colorFilter).length === 0\">Aradığınız renk bulunamadı</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-3\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Color } from 'src/app/models/entities/color';\r\nimport { ColorService } from 'src/app/services/color.service';\r\n\r\n@Component({\r\n  selector: 'app-color',\r\n  templateUrl: './color.component.html',\r\n  styleUrls: ['./color.component.css'],\r\n})\r\nexport class ColorComponent implements OnInit {\r\n  colors: Color[] = [];\r\n  currentColor: Color;\r\n  dataLoaded = false;\r\n  colorFilter: any = { colorName: '' };\r\n\r\n  constructor(private colorService: ColorService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getColors();\r\n  }\r\n\r\n  getColors() {\r\n    this.colorService.getColors().subscribe((response) => {\r\n      this.colors = response.data;\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BrandService } from 'src/app/services/brand.service';\r\n\r\n@Component({\r\n  selector: 'app-brand-add',\r\n  templateUrl: './brand-add.component.html',\r\n  styleUrls: ['./brand-add.component.css'],\r\n})\r\nexport class BrandAddComponent implements OnInit {\r\n  brandAddForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private brandService: BrandService,\r\n    private toastrService: ToastrService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createBrandAddForm();\r\n  }\r\n\r\n  createBrandAddForm() {\r\n    this.brandAddForm = this.formBuilder.group({\r\n      brandName: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  add() {\r\n    if (this.brandAddForm.valid) {\r\n      let brandModel = Object.assign({}, this.brandAddForm.value);\r\n      this.brandService.add(brandModel).subscribe(\r\n        (response) => {\r\n          setTimeout(() => {\r\n            this.router.navigate(['admin/brands']);\r\n          }, 1000);\r\n          this.toastrService.success(response.message, 'Başarılı');\r\n        },\r\n        (responseError) => {\r\n          if (responseError.error.Errors.length > 0) {\r\n            console.log(responseError.error.Errors);\r\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n              this.toastrService.error(\r\n                responseError.error.Errors[i].ErrorMessage,\r\n                'Doğrulama hatası'\r\n              );\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.toastrService.error('Tüm alanları doldurmak zorunludur', 'Uyarı');\r\n    }\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"title\">Marka Ekle</h5>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"brandAddForm\">\r\n\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"brandName\" class=\"fore-label\">Marka Adı</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" id=\"brandName\" formControlName=\"brandName\" placeholder=\"Marka Adı\"\r\n                                    class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button class=\"btn btn-fill btn-danger\" (click)=\"add()\">Ekle</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { CarDetailDto } from 'src/app/models/dtos/carDetailDto';\r\nimport { CarImage } from 'src/app/models/entities/carImage';\r\nimport { CarDetailService } from 'src/app/services/car-detail.service';\r\nimport { AppState } from 'src/app/store/app.reducer';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-car',\r\n  templateUrl: './car.component.html',\r\n  styleUrls: ['./car.component.css'],\r\n})\r\nexport class CarComponent implements OnInit {\r\n  carDetails: CarDetailDto[] = [];\r\n  carImages: CarImage[] = [];\r\n  imageBasePath = environment.baseUrl;\r\n  dataLoaded = false;\r\n  constructor(\r\n    private carDetailService: CarDetailService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private store: Store<AppState>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      if (params['colorId'] && params['brandId']) {\r\n        this.getCarsByColorAndBrand(params['colorId'], params['brandId']);\r\n      } else if (params['brandId']) {\r\n        this.getCarsByBrand(params['brandId']);\r\n      } else if (params['colorId']) {\r\n        this.getCarsByColor(params['colorId']);\r\n      } else {\r\n        this.getCars();\r\n      }\r\n    });\r\n  }\r\n\r\n  getCars() {\r\n    this.carDetailService.getCarDetails().subscribe((response) => {\r\n      this.carDetails = response.data;\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n\r\n  getCarsByBrand(brandId: number) {\r\n    this.carDetailService.getCarsByBrand(brandId).subscribe((response) => {\r\n      this.carDetails = response.data;\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n\r\n  getCarsByColor(colorId: number) {\r\n    this.carDetailService.getCarsByColor(colorId).subscribe((response) => {\r\n      this.carDetails = response.data;\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n\r\n  getCarsByColorAndBrand(colorId: number, brandId: number) {\r\n    this.carDetailService\r\n      .getCarsByColorAndBrand(colorId, brandId)\r\n      .subscribe((response) => {\r\n        this.carDetails = response.data;\r\n        this.dataLoaded = true;\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-3\">\r\n        <app-car-filter></app-car-filter>\r\n    </div>\r\n    <div class=\"col-md-9\">\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div *ngIf=\"!dataLoaded\" class=\"spinner-border text-primary\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        <app-car-card [carDetails]=\"carDetails\" [imageBasePath]=\"imageBasePath\">\r\n        </app-car-card>\r\n        <p class=\"lead text-center\" *ngIf=\"(carDetails).length === 0 && dataLoaded\">Aradığınız\r\n            özelliklere ait araç bulunamadı</p>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\nimport { TokenModel } from 'src/app/models/tokenModel';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private localStorageService: LocalStorageService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let tokenModel: TokenModel | null = this.localStorageService.get<TokenModel>(\n      'tokenModel'\n    );\n\n    let newRequest: HttpRequest<any> = request.clone({\n      headers: request.headers.set(\n        'Authorization',\n        `Bearer ${tokenModel?.token}`\n      ),\n    });\n\n    return next.handle(newRequest);\n  }\n}\n","import { AuthReducer, AuthState } from './auth/auth.reducer';\r\n\r\nexport interface AppState {\r\n  appAuth: AuthState;\r\n}\r\n\r\nexport const AppReducers = {\r\n  appAuth: AuthReducer,\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ListResponseModel } from '../models/listResponseModel';\r\nimport { Brand } from '../models/entities/brand';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ResponseModel } from '../models/responseModel';\r\nimport { SingleResponseModel } from '../models/singleResponseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BrandService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getBrands(): Observable<ListResponseModel<Brand>> {\r\n    return this.httpClient.get<ListResponseModel<Brand>>(\r\n      environment.apiUrl + 'brands'\r\n    );\r\n  }\r\n\r\n  getBrandById(brandId: number): Observable<SingleResponseModel<Brand>> {\r\n    return this.httpClient.get<SingleResponseModel<Brand>>(\r\n      environment.apiUrl + 'brands/getbyid?brandId=' + brandId\r\n    );\r\n  }\r\n\r\n  add(brand: Brand): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'brands/add',\r\n      brand\r\n    );\r\n  }\r\n\r\n  update(brand: Brand): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'brands/update',\r\n      brand\r\n    );\r\n  }\r\n\r\n  delete(brand: Brand) {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'brands/delete',\r\n      brand\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CarDetailDto } from '../models/dtos/carDetailDto';\r\nimport { ListResponseModel } from '../models/listResponseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarDetailService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getCarDetails(): Observable<ListResponseModel<CarDetailDto>> {\r\n    return this.httpClient.get<ListResponseModel<CarDetailDto>>(\r\n      environment.apiUrl + 'cars/details'\r\n    );\r\n  }\r\n\r\n  getCarById(carId: number): Observable<ListResponseModel<CarDetailDto>> {\r\n    let newPath = environment.apiUrl + 'cars/detailsbycarid?carId=' + carId;\r\n    return this.httpClient.get<ListResponseModel<CarDetailDto>>(newPath);\r\n  }\r\n\r\n  getCarsByBrand(brandId: number): Observable<ListResponseModel<CarDetailDto>> {\r\n    let newPath = environment.apiUrl + 'cars/detailsbybrand?brandId=' + brandId;\r\n    return this.httpClient.get<ListResponseModel<CarDetailDto>>(newPath);\r\n  }\r\n\r\n  getCarsByColor(colorId: number): Observable<ListResponseModel<CarDetailDto>> {\r\n    let newPath = environment.apiUrl + 'cars/detailsbycolor?colorId=' + colorId;\r\n    return this.httpClient.get<ListResponseModel<CarDetailDto>>(newPath);\r\n  }\r\n\r\n  getCarsByColorAndBrand(\r\n    colorId: number,\r\n    brandId: number\r\n  ): Observable<ListResponseModel<CarDetailDto>> {\r\n    let newPath =\r\n      environment.apiUrl +\r\n      'cars/detailsbycolorandbrand?colorId=' +\r\n      colorId +\r\n      '&brandId=' +\r\n      brandId;\r\n    return this.httpClient.get<ListResponseModel<CarDetailDto>>(newPath);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { LocalStorageService } from './services/local-storage.service';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'ReCap Project';\r\n  userMail: string | null = this.localStorageService.get<string>('userMail');\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private localStorageService: LocalStorageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    if (this.userMail) {\r\n      this.getUserDetailByEmail(this.userMail);\r\n    }\r\n  }\r\n\r\n  getUserDetailByEmail(mail: string) {\r\n    this.userService\r\n      .getUserDetailByEmail(mail)\r\n      .subscribe((response) => this.authService.setUserDetail(response.data));\r\n  }\r\n}\r\n","<app-navi></app-navi>\r\n<div class=\"container mb-2 mt-3\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { CarDetailDto } from 'src/app/models/dtos/carDetailDto';\nimport { CarDetailService } from 'src/app/services/car-detail.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-car-admin',\n  templateUrl: './car-admin.component.html',\n  styleUrls: ['./car-admin.component.css']\n})\nexport class CarAdminComponent implements OnInit {\n  carDetails: CarDetailDto[] = [];\n  dataLoaded = false;\n  imageBasePath = environment.baseUrl;\n\n  constructor(private carDetailService:CarDetailService) { }\n\n  ngOnInit(): void {\n    this.getCars();\n  }\n\n  getCars() {\n    this.carDetailService.getCarDetails().subscribe((response) => {\n      this.carDetails = response.data;\n      this.dataLoaded = true;\n    });\n  }\n}\n","<div *ngIf=\"!dataLoaded\" class=\"spinner-border text-primary\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n</div>\n\n<table class=\"table\" *ngIf=\"dataLoaded\">\n    <thead>\n        <tr class=\"text-center\">\n            <th>Car ID</th>\n            <th>Marka Adı</th>\n            <th>Renk Adı</th>\n            <th>Model Yılı</th>\n            <th>Günlük Fiyatı</th>\n            <th>Findeks Puanı</th>\n            <th>Resim</th>\n            <th> <button routerLink='/admin/cars/add' class=\"btn btn-success float-right\">Ekle</button>\n            </th>\n        </tr>\n    </thead>\n    <tr *ngFor=\"let carDetail of carDetails\" class=\"text-center\">\n        <td>{{carDetail.carId}}</td>\n        <td>{{carDetail.brandName}}</td>\n        <td>{{carDetail.colorName}}</td>\n        <td>{{carDetail.modelYear}}</td>\n        <td>{{carDetail.dailyPrice}}</td>\n        <td>{{carDetail.findeksScore}}</td>\n        <td>\n            <img *ngIf=\"!carDetail.image.length;\" src=\"../../../assets/images/no-image.png\" height=\"50px\">\n            <div *ngFor=\"let image of carDetail.image\">\n                <img *ngIf=\"image.isMain\" src=\"{{imageBasePath}}/{{image.imagePath}}\" height=\"50px\">\n            </div>\n        </td>\n        <td><button routerLink=\"/admin/cars/update/{{carDetail.carId}}\"\n                class=\"btn btn-warning float-right\">Güncelle</button></td>\n    </tr>\n</table>","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private toastrService: ToastrService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let mail: string | null = this.localStorageService.get<string>('userMail');\n    return this.authService.isAuthorized(mail, ['admin']).pipe(\n      map((response) => {\n        console.log(response);\n        return response.success;\n      }),\n      catchError(() => {\n        this.router.navigate(['']);\n        this.toastrService.info(\n          'Gitmek istediğiniz sayfaya erişebilmek için yönetici olmalısınız'\n        );\n        return of(false);\n      })\n    );\n  }\n}\n","<div *ngIf=\"!dataLoaded\" class=\"spinner-border text-primary\" role=\"status\">\r\n    <span class=\"sr-only\">Loading...</span>\r\n</div>\r\n\r\n<table class=\"table\" *ngIf=\"dataLoaded\">\r\n    <thead>\r\n        <tr>\r\n            <th>Rental ID</th>\r\n            <th>Marka Adı</th>\r\n            <th>Müşteri Adı</th>\r\n            <th>Kullanıcı Adı</th>\r\n            <th>Kiralama Tarihi</th>\r\n            <th>Dönüş Tarihi</th>\r\n            <th></th>\r\n        </tr>\r\n    </thead>\r\n    <tr *ngFor=\"let rentalDetail of rentalDetails\">\r\n        <td>{{rentalDetail.rentalId}}</td>\r\n        <td>{{rentalDetail.brandName}}</td>\r\n        <td>{{rentalDetail.customerName}}</td>\r\n        <td>{{rentalDetail.userName}}</td>\r\n        <td>{{rentalDetail.rentDate | date: 'fullDate' }}</td>\r\n        <td *ngIf=\"rentalDetail.returnDate\">{{rentalDetail.returnDate | date: 'fullDate' }}</td>\r\n        <td *ngIf=\"!rentalDetail.returnDate\">No Return Date</td>\r\n    </tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { RentalDetailDto } from 'src/app/models/dtos/rentalDetailDto';\r\nimport { RentalDetailService } from 'src/app/services/rental-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-rental',\r\n  templateUrl: './rental.component.html',\r\n  styleUrls: ['./rental.component.css'],\r\n})\r\nexport class RentalComponent implements OnInit {\r\n  rentalDetails: RentalDetailDto[] = [];\r\n  returnDate: Date;\r\n  dataLoaded = false;\r\n\r\n  constructor(private rentalDetailService: RentalDetailService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getRentals();\r\n  }\r\n\r\n  getRentals() {\r\n    this.rentalDetailService.getRentalDetails().subscribe((response) => {\r\n      this.rentalDetails = response.data;\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploader } from 'ng2-file-upload';\nimport { ToastrService } from 'ngx-toastr';\nimport { CarImage } from 'src/app/models/entities/carImage';\nimport { ResponseModel } from 'src/app/models/responseModel';\nimport { TokenModel } from 'src/app/models/tokenModel';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-car-images',\n  templateUrl: './car-images.component.html',\n  styleUrls: ['./car-images.component.css'],\n})\nexport class CarImagesComponent implements OnInit {\n  carImages: CarImage[] = [];\n  uploader: FileUploader;\n  hasBaseDropZoneOver: boolean;\n  response: string;\n  currentMain: CarImage;\n  currentCar: any;\n  tokenModel: TokenModel = this.localStorageService.get('tokenModel');\n  constructor(\n    private modalService: NgbModal,\n    private activatedRoute: ActivatedRoute,\n    private localStorageService: LocalStorageService,\n    private toastrService: ToastrService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params) => {\n      this.currentCar = params['carId'];\n    });\n    this.initializeUploader();\n  }\n\n  openXl(content: any) {\n    this.modalService\n      .open(content, {\n        ariaLabelledBy: 'modal-basic-title',\n        animation: true,\n        centered: true,\n        size: 'lg',\n      })\n      .result.then(\n        () => {},\n        () => {\n          this.router.navigate(['admin/cars']);\n        }\n      )\n      .catch(() => {\n        return null;\n      });\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: environment.apiUrl + 'carimages/add',\n      isHTML5: true,\n      additionalParameter: { carId: this.currentCar },\n      authToken: 'Bearer ' + this.tokenModel.token,\n      allowedFileType: ['image'],\n      autoUpload: false,\n      removeAfterUpload: true,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: ResponseModel = JSON.parse(response);\n        this.toastrService.success(res.message, 'Başarılı');\n      }\n    };\n\n    this.uploader.onErrorItem = (item, response, status, headers) => {\n      if (response) {\n        const res: ResponseModel = JSON.parse(response);\n        this.toastrService.error(res.message, 'Uyarı');\n      }\n    };\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n}\n","<ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Resim Ekle</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"row mt-1\">\n            <div class=\"col-md-4\">\n                Tekli\n                <input type=\"file\" class='mb-2 mt-1' ng2FileSelect [uploader]=\"uploader\" /> <br>\n            </div>\n            <div class=\"col-md-4\">\n                Çoklu\n                <input type=\"file\" class='mt-1' ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n            </div>\n            <div class=\"col-md-4\">\n                <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\"\n                    [uploader]=\"uploader\" class=\"well my-drop-zone p-4\">\n                    <small>Resimlerinizi buraya sürükleyerek yükleyebilirsiniz.</small>\n                </div>\n            </div>\n            <div class=\"col-md-12\" style=\"margin-bottom: 40px\">\n                <p>Toplam Resim Sayısı: {{ uploader?.queue?.length }}</p>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Resim Adı</th>\n                            <th>Boyutu</th>\n                            <th>İlerleme</th>\n                            <th>Durum</th>\n                            <th class=\"text-right\">Eylemler</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let item of uploader.queue\">\n                            <td class=\"overflowtext\"><strong>{{ item?.file?.name }}</strong></td>\n                            <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }}\n                                MB\n                            </td>\n                            <td *ngIf=\"uploader.options.isHTML5\">\n                                <div class=\"progress\" style=\"margin-bottom: 0;\">\n                                    <div class=\"progress-bar\" role=\"progressbar\"\n                                        [ngStyle]=\"{ 'width': item.progress + '%' }\">\n                                    </div>\n                                </div>\n                            </td>\n                            <td>\n                                <span *ngIf=\"item.isSuccess\"><i class=\"glyphicon glyphicon-ok\"></i></span>\n                                <span *ngIf=\"item.isCancel\"><i class=\"glyphicon glyphicon-ban-circle\"></i></span>\n                                <span *ngIf=\"item.isError\"><i class=\"glyphicon glyphicon-remove\"></i></span>\n                            </td>\n                            <td>\n                                <div class=\"row justify-content-end\">\n                                    <button type=\"button\" class=\"btn btn-success btn-xs mr-1\" (click)=\"item.upload()\"\n                                        [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n                                        <span class=\"glyphicon glyphicon-upload\"></span> Yükle\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-warning btn-xs mr-1\" (click)=\"item.cancel()\"\n                                        [disabled]=\"!item.isUploading\">\n                                        <span class=\"glyphicon glyphicon-ban-circle\"></span> İptal Et\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-danger btn-xs\" (click)=\"item.remove()\">\n                                        <span class=\"glyphicon glyphicon-trash\"></span> Sil\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"mt-5\">\n                    <div>\n                        Kuyruk ilerlemesi:\n                        <div class=\"progress mt-2\">\n                            <div class=\"progress-bar\" role=\"progressbar\"\n                                [ngStyle]=\"{ 'width': uploader.progress + '%' }\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row mt-2 justify-content-end mr-1\">\n                        <button type=\"button\" class=\"btn btn-success btn-s mr-1\" (click)=\"uploader.uploadAll()\"\n                            [disabled]=\"!uploader.getNotUploadedItems().length\">\n                            <span class=\"glyphicon glyphicon-upload\"></span> Hepsini Yükle\n                        </button>\n                        <button type=\"button\" class=\"btn btn-warning btn-s mr-1\" (click)=\"uploader.cancelAll()\"\n                            [disabled]=\"!uploader.isUploading\">\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span> Hepsini İptal Et\n                        </button>\n                        <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                            [disabled]=\"!uploader.queue.length\">\n                            <span class=\"glyphicon glyphicon-trash\"></span> Hepsini Sil\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<button class=\"btn btn-outline-success\" (click)=\"openXl(content)\">Resim Ekle</button>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NaviComponent } from './components/navi/navi.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\n\r\nimport { BrandComponent } from './components/admin/brand/brand.component';\r\nimport { BrandAddComponent } from './components/admin/brand/brand-add/brand-add.component';\r\n\r\nimport { ColorComponent } from './components/admin/color/color.component';\r\nimport { ColorAddComponent } from './components/admin/color/color-add/color-add.component';\r\n\r\nimport { RentalComponent } from './components/rental/rental.component';\r\nimport { RentalAddComponent } from './components/rental/rental-add/rental-add.component';\r\n\r\nimport { CarComponent } from './components/car/car.component';\r\nimport { CarAddComponent } from './components/admin/car-admin/car-add/car-add.component';\r\nimport { CarCardComponent } from './components/car/car-card/car-card.component';\r\nimport { CarDetailComponent } from './components/car/car-detail/car-detail.component';\r\nimport { CarFilterComponent } from './components/car/car-filter/car-filter.component';\r\n\r\nimport { CustomerComponent } from './components/admin/customer/customer.component';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { BrandUpdateComponent } from './components/admin/brand/brand-update/brand-update.component';\r\nimport { ColorUpdateComponent } from './components/admin/color/color-update/color-update.component';\r\nimport { CarAdminComponent } from './components/admin/car-admin/car-admin.component';\r\nimport { CarUpdateComponent } from './components/admin/car-admin/car-update/car-update.component';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\r\nimport { UpdateComponent } from './components/user/update/update.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { AppReducers } from './store/app.reducer';\r\nimport { CarImagesComponent } from './components/admin/car-admin/car-images/car-images.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NaviComponent,\r\n    FooterComponent,\r\n    AboutComponent,\r\n\r\n    BrandComponent,\r\n    BrandAddComponent,\r\n    BrandUpdateComponent,\r\n\r\n    ColorComponent,\r\n    ColorAddComponent,\r\n    ColorUpdateComponent,\r\n\r\n    CarAdminComponent,\r\n    CarAddComponent,\r\n\r\n    CarComponent,\r\n    CarCardComponent,\r\n    CarDetailComponent,\r\n    CarFilterComponent,\r\n\r\n    RentalComponent,\r\n    RentalAddComponent,\r\n\r\n    CustomerComponent,\r\n    PaymentComponent,\r\n    CarUpdateComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    UpdateComponent,\r\n    CarImagesComponent,\r\n    NotFoundComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FilterPipeModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    FileUploadModule,\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right',\r\n    }),\r\n    StoreModule.forRoot(AppReducers),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { UserDetailDto } from 'src/app/models/dtos/userDetailDto';\nimport { UserDetailForUpdate } from 'src/app/models/dtos/userDetailForUpdate';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css'],\n})\nexport class UpdateComponent implements OnInit {\n  userUpdateForm: FormGroup;\n  userDetailDto?: UserDetailDto;\n  userDetailDto$: Observable<UserDetailDto | undefined> = this.authService\n  .userDetailDto$;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastrService: ToastrService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.getUserDetailsFromStore();\n  }\n\n  getUserDetailsFromStore() {\n    this.authService.userDetailDto$.pipe(first()).subscribe((userDetailDto) => {\n      if (!userDetailDto) {\n        return null;\n      }\n      this.userDetailDto = userDetailDto;\n      this.createAccountFrom();\n    });\n  }\n\n  createAccountFrom() {\n    this.userUpdateForm = this.formBuilder.group({\n      firstName: [this.userDetailDto?.firstName, Validators.required],\n      lastName: [this.userDetailDto?.lastName, Validators.required],\n      companyName: [this.userDetailDto?.companyName, Validators.required],\n      currentPassword: ['', Validators.required],\n      newPassword: [''],\n    });\n  }\n\n  updateAccount() {\n    if (!this.userUpdateForm.valid) {\n      return null;\n    }\n\n    let userDetailUpdateModel: UserDetailForUpdate = {\n      ...this.userDetailDto,\n      ...this.userUpdateForm.value,\n    };\n\n    this.authService.update(userDetailUpdateModel).subscribe((response) => {\n      if (!this.userDetailDto) {\n        return null;\n      }\n\n      var newUserDetail: UserDetailDto = {\n        ...this.userDetailDto,\n        firstName: userDetailUpdateModel.firstName,\n        lastName: userDetailUpdateModel.lastName,\n        companyName: userDetailUpdateModel.companyName,\n      };\n      this.authService.setUserDetail(newUserDetail);\n\n      this.toastrService.success(response.message);\n      this.router.navigate(['']);\n    });\n  }\n}\n","<div class=\"content\" *ngIf=\"userUpdateForm\">\n  <div class=\"row\">\n    <div class=\"col-md-3 \"></div>\n    <div class=\"col-md-6 \">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h5 class=\"title\">Kullanıcı Bilgilerini Güncelle</h5>\n        </div>\n\n        <div class=\"card-body\">\n          <form [formGroup]=\"userUpdateForm\">\n\n            <div class=\"mb-3\">\n              <label for=\"firstName\" class=\"sr-only\">Adınız</label>\n              <div class=\"form-group\">\n                <input type=\"text\" id=\"firstName\" formControlName=\"firstName\" placeholder=\"Adınız\"\n                  class=\"form-control\" />\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"lastName\" class=\"sr-only\">Soyadınız</label>\n              <div class=\"form-group\">\n                <input type=\"text\" id=\"lastName\" formControlName=\"lastName\" placeholder=\"Soyadınız\"\n                  class=\"form-control\" />\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"companyName\" class=\"sr-only\">Şirket Adı</label>\n              <div class=\"form-group\">\n                <input type=\"text\" id=\"companyName\" formControlName=\"companyName\" placeholder=\"Şirket Adı\"\n                  class=\"form-control\" />\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"currentPassword\" class=\"sr-only\">Mevcut Şifreniz</label>\n              <div class=\"form-group\">\n                <input type=\"password\" id=\"currentPassword\" formControlName=\"currentPassword\"\n                  placeholder=\"Mevcut Şifreniz\" class=\"form-control\" />\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"newPassword\" class=\"sr-only\">Yeni Şifreniz</label>\n              <div class=\"form-group\">\n                <input type=\"password\" id=\"newPassword\" formControlName=\"newPassword\" placeholder=\"Yeni Şifreniz\"\n                  class=\"form-control\" />\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"email-input\" class=\"form-label\">Email</label>\n              <input type=\"email\" class=\"form-control text-secondary\" id=\"email-input\" placeholder=\"name@example.com\"\n                [value]=\"(userDetailDto$ | async)?.email\" [attr.disabled]=\"true\" />\n            </div>\n\n            <div class=\"mb-3\">\n              <p>Findeks Puanınız: <strong>{{ (userDetailDto$ | async)?.findeksScore }}</strong></p>\n            </div>\n\n          </form>\n        </div>\n        <div class=\"card-footer\">\n          <button class=\"btn btn-fill btn-success\" (click)='updateAccount()'>Güncelle</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CarDetailDto } from 'src/app/models/dtos/carDetailDto';\r\nimport { CarDetailService } from 'src/app/services/car-detail.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-car-detail',\r\n  templateUrl: './car-detail.component.html',\r\n  styleUrls: ['./car-detail.component.css'],\r\n})\r\nexport class CarDetailComponent implements OnInit {\r\n  carDetail: CarDetailDto;\r\n  dataLoaded = false;\r\n  imageBasePath = environment.baseUrl;\r\n\r\n  constructor(\r\n    private carDetailService: CarDetailService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      if (params['carId']) {\r\n        this.getCarsById(params['carId']);\r\n      }\r\n    });\r\n  }\r\n\r\n  getCarsById(carId: number) {\r\n    this.carDetailService.getCarById(carId).subscribe((response) => {\r\n      this.carDetail = response.data[0];\r\n      this.dataLoaded = true;\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n    <div *ngIf=\"!dataLoaded\" class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"carDetail\">\r\n    <div id=\"carDetailCarousel\" class=\"carousel slide col-md-8\" data-ride=\"carousel\">\r\n        <div class=\"carousel-inner img-fluid\">\r\n            <div class=\"card\" *ngIf=\"!carDetail.image.length\">\r\n                <img src=\"../../../../assets/images/no-image.png\" class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\">\r\n            </div>\r\n            <div class=\"carousel-item card\" *ngFor=\"let image of carDetail.image; let i=index\"\r\n                [ngClass]=\"(i === 0) ? 'active' : '' \">\r\n                <img class=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" src=\"{{imageBasePath}}/{{image.imagePath}}\">\r\n            </div>\r\n            <div class=\"container\" *ngIf=\"carDetail.image.length > 1\"> <a class=\"carousel-control-prev\"\r\n                    href=\"#carDetailCarousel\" role=\"button\" data-slide=\"prev\">\r\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"sr-only\">Önceki</span>\r\n                </a>\r\n                <a class=\"carousel-control-next\" href=\"#carDetailCarousel\" role=\"button\" data-slide=\"next\">\r\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"sr-only\">Sonraki</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card col-md-4\" style=\"width: 18rem;\">\r\n        <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{carDetail.brandName}}</h5>\r\n            <h6 class=\"card-subtitle mb-3 text-muted\"><strong>Renk: </strong>{{carDetail.colorName}}</h6>\r\n            <h6 class=\"card-subtitle mb-3 text-muted\"><strong>Model: </strong>{{carDetail.modelYear}}</h6>\r\n            <h6 class=\"card-subtitle mb-3 text-muted\"><strong>Findeks Puanı: </strong>{{carDetail.findeksScore}}</h6>\r\n            <p class=\"card-text\">{{carDetail.description}}</p>\r\n            <hr>\r\n            <div class=\"d-flex justify-content-between\">\r\n                <a routerLink=\"/cars\" class=\"card-link justify-right\">Geri Dön</a>\r\n                <app-rental-add [carDetail]=\"carDetail\" [imageBasePath]=\"imageBasePath\"></app-rental-add>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ListResponseModel } from '../models/listResponseModel';\r\nimport { Rental } from '../models/entities/rental';\r\nimport { ResponseModel } from '../models/responseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RentalService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getRentals(): Observable<ListResponseModel<Rental>> {\r\n    return this.httpClient.get<ListResponseModel<Rental>>(\r\n      environment.apiUrl + 'rentals'\r\n    );\r\n  }\r\n\r\n  addRentals(rental: Rental): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'rentals/add',\r\n      rental\r\n    );\r\n  }\r\n\r\n  updateRentals(rental: Rental): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'rentals/update',\r\n      rental\r\n    );\r\n  }\r\n\r\n  deleteRentals(rental: Rental): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'rentals/delete',\r\n      rental\r\n    );\r\n  }\r\n\r\n  IsCarCanBeRented(rental: Rental): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'rentals/iscarcanberent',\r\n      rental\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Brand } from 'src/app/models/entities/brand';\r\nimport { BrandService } from 'src/app/services/brand.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-brand-update',\r\n  templateUrl: './brand-update.component.html',\r\n  styleUrls: ['./brand-update.component.css'],\r\n})\r\nexport class BrandUpdateComponent implements OnInit {\r\n  brand: Brand;\r\n  brandUpdateForm: FormGroup;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private brandService: BrandService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private toastrService: ToastrService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params) => {\r\n      if (params['brandId']) {\r\n        this.getBrandById(params['brandId']);\r\n      }\r\n    });\r\n  }\r\n\r\n  createBrandUpdateForm(brand: Brand) {\r\n    this.brandUpdateForm = this.formBuilder.group({\r\n      brandId: [brand.brandId, Validators.required],\r\n      brandName: [brand.brandName, Validators.required],\r\n    });\r\n  }\r\n\r\n  getBrandById(brandId: number) {\r\n    this.brandService.getBrandById(brandId).subscribe((response) => {\r\n      this.brand = response.data;\r\n      this.createBrandUpdateForm(this.brand);\r\n    });\r\n  }\r\n\r\n  update() {\r\n    if (this.brandUpdateForm.valid) {\r\n      let brandModel = Object.assign({}, this.brandUpdateForm.value);\r\n      console.log(brandModel);\r\n      this.brandService.update(brandModel).subscribe(\r\n        (response) => {\r\n          setTimeout(() => {\r\n            this.router.navigate(['admin/brands']);\r\n          }, 1000);\r\n          this.toastrService.success(response.message, 'Başarılı');\r\n        },\r\n        (responseError) => {\r\n          if (responseError.error.Errors.length > 0) {\r\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n              this.toastrService.error(\r\n                responseError.error.Errors[i].ErrorMessage,\r\n                'Doğrulama hatası'\r\n              );\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.toastrService.error('Tüm alanları doldurmak zorunludur', 'Uyarı');\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    console.log(this.brand);\r\n    this.brandService.delete(this.brand).subscribe(\r\n      (response) => {\r\n        setTimeout(() => {\r\n          this.router.navigate(['admin/brands']);\r\n        }, 1000);\r\n        this.toastrService.info(response.message, 'Başarılı');\r\n      },\r\n      (responseError) => {\r\n        if (responseError.error.Errors.length > 0) {\r\n          for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n            this.toastrService.error(\r\n              responseError.error.Errors[i].ErrorMessage,\r\n              'Doğrulama hatası'\r\n            );\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h5 class=\"title\">Marka Güncelle</h5>\r\n                </div>\r\n\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"brandUpdateForm\" *ngIf='brand'>\r\n                        <div class=\"mb-3\">\r\n                            <label for=\"brandName\" class=\"fore-label\">Marka Güncelle</label>\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" id=\"brandName\" formControlName=\"brandName\" placeholder=\"Marka Güncelle\"\r\n                                    class=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                \r\n                <div class=\"card-footer\">\r\n                    <button class=\"btn btn-fill btn-success\" (click)=\"update()\">Güncelle</button>\r\n                    <button class=\"btn btn-fill btn-danger float-right\" (click)=\"delete()\">Sil</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Araç kiralama</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <input type=\"hidden\" id=\"carId\" placeholder=\"Car ID\" class=\"form-control\" value=\"{{carDetail.carId}}\" />\r\n            <label for=\"rentACar\">Aracı kiralamak istediğinizden emin misiniz?</label>\r\n            <div class=\"mb-3\">\r\n                <div class=\"card\">\r\n                    <img *ngIf=\"carDetail.image.length < 1\" src=\"../../../assets/images/no-image.png\"\r\n                        class=\"card-img-top\" width=\"50%\">\r\n                    <div *ngFor=\"let img of carDetail.image\">\r\n                        <img *ngIf=\"img.isMain\" src=\"{{imageBasePath}}/{{img.imagePath}}\" class=\"card-img-top\"\r\n                            width=\"50%\">\r\n                    </div>\r\n                    <div class=\"card-body pt-0 px-0\">\r\n                        <div class=\"d-flex flex-row justify-content-between mb-0 px-3 mt-2\"> <small\r\n                                class=\"text-muted mt-1\">Daily Price</small>\r\n                            <h6>{{carDetail.dailyPrice | currency:\"₺\" }}</h6>\r\n                        </div>\r\n                        <div class=\"d-flex flex-row justify-content-between mb-0 px-3 mt-2\"> <small\r\n                                class=\"text-muted mt-1\">Findeks Score</small>\r\n                            <h6>{{carDetail.findeksScore }}</h6>\r\n                        </div>\r\n                        <div class=\"d-flex flex-row justify-content-between p-3 mid\">\r\n                            <div class=\"d-flex flex-column\">\r\n                                <p class=\"text-muted mb-1\">{{carDetail.brandName}}</p>\r\n                                <div class=\"d-flex flex-row\"><img src=\"https://imgur.com/iPtsG7I.png\" width=\"35px\"\r\n                                        height=\"25px\">\r\n                                    <div class=\"d-flex flex-column ml-1\"><small\r\n                                            class=\"ghj\">{{carDetail.colorName}}</small></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-flex flex-column\"><small class=\"text-muted mb-2\">Model Year</small>\r\n                                <div class=\"d-flex flex-row\"><img src=\"https://imgur.com/J11mEBq.png\">\r\n                                    <h6 class=\"ml-1\">{{carDetail.modelYear}}</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"container\">\r\n                            <div class=\"form-group row mb-2\">\r\n                                <label for=\"example-date-input\" class=\"col-4 col-form-label\">Başlangıç:</label>\r\n                                <div class=\"col-8\">\r\n                                    <input class=\"form-control\" min=\"{{ getRentMinDate() }}\"\r\n                                        value=\"{{ getRentMinDate() }}\" type=\"date\" [(ngModel)]=\"rentDate\"\r\n                                        (ngModelChange)=\"totalPriceCalculate()\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row mb-2\">\r\n                                <label for=\"example-date-input\" class=\"col-4 col-form-label\">Bitiş:</label>\r\n                                <div class=\"col-8\">\r\n                                    <input class=\"form-control\" min=\"{{ getReturnMinDate() }}\"\r\n                                        value=\"{{ getReturnMinDate() }}\" type=\"date\" [(ngModel)]=\"returnDate\"\r\n                                        (ngModelChange)=\"totalPriceCalculate()\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex flex-row justify-content-between mb-0 px-3 mt-2\"> <small\r\n                                class=\"text-muted mt-1\">Toplam Fiyat:</small>\r\n                            <h6 *ngIf='totalPrice'>{{ totalPrice | currency:\"₺\" }}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\" *ngIf='formControl'>\r\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Yes click')\">Evet</button>\r\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.dismiss('No click')\">Hayır</button>\r\n    </div>\r\n</ng-template>\r\n<button class=\"btn btn-outline-info\" (click)=\"open(content)\">Kirala</button>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CarDetailDto } from 'src/app/models/dtos/carDetailDto';\r\nimport { Router } from '@angular/router';\r\nimport { PaymentService } from 'src/app/services/payment.service';\r\nimport { UserDetailDto } from 'src/app/models/dtos/userDetailDto';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { RentalService } from 'src/app/services/rental.service';\r\n\r\n@Component({\r\n  selector: 'app-rental-add',\r\n  templateUrl: './rental-add.component.html',\r\n  styleUrls: ['./rental-add.component.css'],\r\n})\r\nexport class RentalAddComponent implements OnInit {\r\n  rentDate!: Date;\r\n  returnDate!: Date;\r\n  totalPrice: number;\r\n  formControl: boolean = false;\r\n  userDetailDto!: UserDetailDto;\r\n\r\n  @Input()\r\n  carDetail: CarDetailDto;\r\n\r\n  @Input()\r\n  imageBasePath: string;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private toastrService: ToastrService,\r\n    private router: Router,\r\n    private paymentService: PaymentService,\r\n    private rentalService: RentalService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.authService.userDetailDto$.subscribe((userDetailDto) => {\r\n      if (userDetailDto) {\r\n        this.userDetailDto = userDetailDto;\r\n      }\r\n    });\r\n  }\r\n\r\n  open(content: any) {\r\n    this.modalService\r\n      .open(content, { ariaLabelledBy: 'modal-basic-title', animation: true })\r\n      .result.then(() => {\r\n        this.IsCarCanBeRented();\r\n      })\r\n      .catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n\r\n  totalPriceCalculate() {\r\n    var date1 = new Date(this.returnDate);\r\n    var date2 = new Date(this.rentDate);\r\n    if (date1.getTime() === date2.getTime()) {\r\n      this.totalPrice = 0;\r\n      this.formControl = false;\r\n      this.toastrService.warning(\r\n        'Aynı gün için kiralama işlemi gerçekleştirilemez.',\r\n        'Uyarı'\r\n      );\r\n    } else if (date1 > date2) {\r\n      var difference = date1.getTime() - date2.getTime();\r\n      var days = Math.ceil(difference / (1000 * 3600 * 24));\r\n      this.totalPrice = this.carDetail.dailyPrice * days;\r\n      this.formControl = true;\r\n    }\r\n  }\r\n\r\n  IsCarCanBeRented() {\r\n    let rental: any = {\r\n      carId: this.carDetail.carId,\r\n      customerId: this.userDetailDto.customerId,\r\n      rentDate: this.rentDate,\r\n      returnDate: this.returnDate,\r\n    };\r\n\r\n    this.rentalService.IsCarCanBeRented(rental).subscribe(\r\n      () => {\r\n        this.paymentService.setRental(rental, this.totalPrice);\r\n        this.toastrService.success(\r\n          'Ödeme sayfasına yönlendiriliyorsunuz.',\r\n          'Başarılı'\r\n        );\r\n        setTimeout(() => {\r\n          this.router.navigate(['/payments']);\r\n        }, 2000);\r\n      },\r\n      (responseError) => {\r\n        if (responseError.error.Errors.length > 0) {\r\n          for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n            this.toastrService.error(\r\n              responseError.error.Errors[i].ErrorMessage,\r\n              'Doğrulama hatası'\r\n            );\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getRentMinDate() {\r\n    var today = new Date();\r\n    today.setDate(today.getDate() + 1);\r\n    return today.toISOString().slice(0, 10);\r\n  }\r\n  getReturnMinDate() {\r\n    var today = new Date();\r\n    today.setDate(today.getDate() + 2);\r\n    return today.toISOString().slice(0, 10);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserForLoginDto } from 'src/app/models/dtos/userForLoginDto';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private localStorageService: LocalStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  login() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    let loginModel: UserForLoginDto = { ...this.loginForm.value };\n    this.authService.login(loginModel).subscribe(\n      (response) => {\n        this.localStorageService.set('tokenModel', response.data);\n        this.localStorageService.set(\n          'userMail',\n          this.loginForm.get('email')?.value\n        );\n        this.getUserDetailByEmail(this.loginForm.get('email')?.value);\n        this.toastrService.info('Giriş Yapıldı', 'Başarılı');\n        this.router.navigateByUrl('');\n      },\n      (errorResponse) => this.toastrService.error(errorResponse.error)\n    );\n  }\n  getUserDetailByEmail(mail: string) {\n    this.userService.getUserDetailByEmail(mail).subscribe((response) => {\n      this.authService.setUserDetail(response.data);\n    });\n  }\n}\n","<div class=\"text-center login\">\n    <form class=\"form-signin\" [formGroup]=\"loginForm\">\n        <img class=\"mb-4\" src=\"../../../../favicon.ico\" alt=\"\" width=\"72\"\n            height=\"72\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Giriş Yap</h1>\n        <label for=\"inputEmail\" class=\"sr-only\">E-Posta</label>\n        <input formControlName=\"email\" type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"E-Posta\" required\n            autofocus>\n        <label for=\"inputPassword\" class=\"sr-only\">Parola</label>\n        <input formControlName=\"password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Parola\"\n            required>\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"login()\">Giriş yap</button>\n        <p class=\"mt-5 mb-3 text-muted\">&copy; 2021</p>\n    </form>\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CarDetailDto } from 'src/app/models/dtos/carDetailDto';\r\nimport { UserDetailDto } from 'src/app/models/dtos/userDetailDto';\r\nimport { CreditCard } from 'src/app/models/entities/creditCard';\r\nimport { Payment } from 'src/app/models/entities/payment';\r\nimport { Rental } from 'src/app/models/entities/rental';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CreditCardService } from 'src/app/services/credit-card.service';\r\nimport { PaymentService } from 'src/app/services/payment.service';\r\nimport { RentalService } from 'src/app/services/rental.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css'],\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  userDetailDto!: UserDetailDto;\r\n  creditCardForm: FormGroup;\r\n  creditCards?: CreditCard[] = [];\r\n  selectedCreditCard?: CreditCard;\r\n\r\n  rental: Rental;\r\n  totalPrice: number;\r\n  dataLoaded = false;\r\n\r\n  constructor(\r\n    private paymentService: PaymentService,\r\n    private rentalService: RentalService,\r\n    private creditCardService: CreditCardService,\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private toastrService: ToastrService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.authService.userDetailDto$.subscribe((userDetailDto) => {\r\n      if (userDetailDto) {\r\n        this.userDetailDto = userDetailDto;\r\n        this.getCreditCardsByUserId();\r\n        this.createCreditCardForm();\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  createCreditCardForm() {\r\n    this.creditCardForm = this.formBuilder.group({\r\n      userId: [this.userDetailDto.userId, Validators.required],\r\n      cardName: [''.toUpperCase(), Validators.required],\r\n      cardNumber: [\r\n        '',\r\n        [Validators.required, Validators.pattern('^((?!(0))[0-9]{16})$')],\r\n      ],\r\n      expiryMonth: [\r\n        '',\r\n        [Validators.required, Validators.pattern('^([0-9]{2})$')],\r\n      ],\r\n      expiryYear: [\r\n        '',\r\n        [Validators.required, Validators.pattern('^([0-9]{2})$')],\r\n      ],\r\n      cvv: ['', [Validators.required, Validators.pattern('^([0-9]{3})$')]],\r\n    });\r\n  }\r\n\r\n  getCreditCardsByUserId() {\r\n    this.creditCardService.getAllByUserId(this.userDetailDto.userId).subscribe((response) => {\r\n      this.creditCards = response.data;\r\n      console.log(this.creditCards);\r\n    });\r\n  }\r\n\r\n  loadData() {\r\n    this.rental = this.paymentService.getRental();\r\n    this.totalPrice = this.paymentService.getTotalPrice();\r\n    this.dataLoaded = true;\r\n  }\r\n\r\n  add() {\r\n    this.rentalService.addRentals(this.rental).subscribe(\r\n      () => {\r\n        let payment: any = {\r\n          carId: this.rental.carId,\r\n          customerId: this.userDetailDto.customerId,\r\n          amount: this.totalPrice,\r\n        };\r\n        this.paymentService.addPayment(payment).subscribe(\r\n          () => {\r\n            this.toastrService.success(\r\n              'Ödeme işlemi tamamlandı, Anasayfaya yönlendiriliyorsunuz..',\r\n              'Başarılı'\r\n            );\r\n            setTimeout(() => {\r\n              this.router.navigate(['']);\r\n            }, 2000);\r\n          },\r\n          (err) => {\r\n            this.toastrService.warning(err.error.message);\r\n          }\r\n        );\r\n        this.askSaveCreditCard();\r\n      },\r\n      (err) => {\r\n        this.toastrService.warning(err.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  askSaveCreditCard() {\r\n    if (!this.selectedCreditCard)\r\n      if (window.confirm('Would you like to save your credit card?')) {\r\n        let newCreditCard: CreditCard = {\r\n          customerId: this.userDetailDto.customerId,\r\n          ...this.creditCardForm.value,\r\n        };\r\n        this.saveCreditCard(newCreditCard);\r\n      }\r\n  }\r\n\r\n  saveCreditCard(creditCard: CreditCard) {\r\n    this.creditCardService.add(creditCard).subscribe((response) => {\r\n      this.toastrService.success(response.message);\r\n    });\r\n  }\r\n\r\n  fillCardInformation(selectedCreditCard: CreditCard) {\r\n    this.selectedCreditCard = selectedCreditCard;\r\n    if (this.selectedCreditCard)\r\n      this.creditCardForm.patchValue({ ...this.selectedCreditCard });\r\n    else this.creditCardForm.reset();\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf='rental; totalPrice'>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"card col-md-6 pb-4 pt-2\">\r\n            <div *ngIf=\"creditCards\" class=\"mb-1\">\r\n                <select id=\"user-credit-cards-select\" class=\"form-select form-control mb-3\"\r\n                    [ngModel]=\"selectedCreditCard\" (ngModelChange)=\"fillCardInformation($event)\">\r\n                    <option [ngValue]=\"undefined\">Kredi Kartlarınız</option>\r\n                    <option [ngValue]=\"creditCard\" *ngFor=\"let creditCard of creditCards\">\r\n                        {{ creditCard.cardName }} -\r\n                        {{ creditCard.cardNumber }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-7\">\r\n                    <h4 class=\"panel-title\">\r\n                        Ödeme Sayfası\r\n                    </h4>\r\n                </div>\r\n                <div class=\"col-md-5 mt-2\">\r\n                    <h6 class=\"card-subtitle mt-1 text-muted\"><small><b>Kiralama Tarihi:</b> {{rental.rentDate}}</small>\r\n                    </h6>\r\n                    <h6 class=\"card-subtitle mt-1 text-muted\"><small><b>Dönüş Tarihi:</b>\r\n                            {{rental.returnDate}}</small></h6>\r\n                </div>\r\n            </div>\r\n            <form [formGroup]=\"creditCardForm\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"cardName\">\r\n                        Kart Sahibinin Adı Soyadı</label>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" id=\"cardName\" formControlName=\"cardName\" class=\"form-control\"\r\n                            placeholder=\"Valid Card Name\" autofocus>\r\n                    </div>\r\n                    <label for=\"cardNumber\">\r\n                        Kart Numarası</label>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" id=\"cardNumber\" formControlName=\"cardNumber\" class=\"form-control\"\r\n                            placeholder=\"Valid Card Number\" autofocus>\r\n                    </div>\r\n                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                        *ngIf=\"creditCardForm.get('cardNumber').hasError('required') && creditCardForm.get('cardNumber').touched\">\r\n                        Card bilgisi zorunludur\r\n                    </div>\r\n                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                        *ngIf=\"creditCardForm.get('cardNumber').hasError('pattern') && creditCardForm.get('cardNumber').touched\">\r\n                        Kart bilgileriniz hatalı\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-7 col-md-7\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"expiryMonth\">\r\n                                Son Kullanma Tarihi</label>\r\n                            <div class=\"row ml-1 input-group\">\r\n                                <div class=\"col-xs-3 col-lg-3 pl-ziro\">\r\n                                    <input type=\"text\" formControlName=\"expiryMonth\" class=\"form-control\"\r\n                                        id=\"expiryMonth\" placeholder=\"AY\" required />\r\n                                </div>\r\n                                <div class=\"col-xs-3 col-lg-3 pl-ziro\">\r\n                                    <input type=\"text\" formControlName=\"expiryYear\" class=\"form-control\" id=\"expiryYear\"\r\n                                        placeholder=\"YIL\" required />\r\n                                </div>\r\n                                <div class=\"alert alert-danger\" role=\"alert\"\r\n                                    *ngIf=\"creditCardForm.get('expiryMonth').hasError('required') && creditCardForm.get('expiryMonth').touched ||\r\n                                    creditCardForm.get('expiryYear').hasError('required') && creditCardForm.get('expiryYear').touched\">\r\n                                    Son kullanım tarihi bilgisi zorunludur\r\n                                </div>\r\n                                <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"creditCardForm.get('expiryMonth').hasError('pattern') || \r\n                                creditCardForm.get('expiryYear').hasError('pattern')\">\r\n                                    Bilgileriniz hatalı\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-5 col-md-5 pull-right\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"cvv\">\r\n                                CVV Kodu</label>\r\n                            <input type=\"password\" formControlName=\"cvv\" class=\"form-control\" id=\"cvv\" placeholder=\"CVV\"\r\n                                required />\r\n                        </div>\r\n                        <div class=\"alert alert-danger\" role=\"alert\"\r\n                            *ngIf=\"creditCardForm.get('cvv').hasError('required') && creditCardForm.get('cvv').touched\">\r\n                            Zorunlu!\r\n                        </div>\r\n                        <div class=\"alert alert-danger\" role=\"alert\"\r\n                            *ngIf=\"creditCardForm.get('cvv').hasError('pattern')\">\r\n                            Hatalı!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ul class=\"nav nav-pills nav-stacked\">\r\n                <h6 class=\"card-subtitle text-muted mt-2 mb-2\"><b>Toplam Fiyat:</b> {{totalPrice |\r\n                    currency:\"₺\"}}</h6>\r\n            </ul>\r\n            <br />\r\n            <button (click)='add()' class=\"btn btn-success btn-lg btn-block\" role=\"button\"\r\n                [disabled]=\"!creditCardForm.valid\">İşlemi Tamamla</button>\r\n        </div>\r\n    </div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { UserForLoginDto } from '../models/dtos/userForLoginDto';\nimport { UserForRegisterDto } from '../models/dtos/userForRegisterDto';\nimport { ResponseModel } from '../models/responseModel';\nimport { SingleResponseModel } from '../models/singleResponseModel';\nimport { TokenModel } from '../models/tokenModel';\nimport { UserDetailDto } from '../models/dtos/userDetailDto';\nimport { AppState } from '../store/app.reducer';\nimport { deleteUserDetail, setUserDetail } from '../store/auth/auth.actions';\nimport { LocalStorageService } from './local-storage.service';\nimport { UserDetailForUpdate } from '../models/dtos/userDetailForUpdate';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  userDetailDto$: Observable<UserDetailDto | undefined> = this.store\n    .select((s) => s.appAuth)\n    .pipe(map((b) => b.userDetailDto));\n\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService,\n    private store: Store<AppState>\n  ) {}\n\n  login(\n    userForLoginDto: UserForLoginDto\n  ): Observable<SingleResponseModel<TokenModel>> {\n    return this.httpClient.post<SingleResponseModel<TokenModel>>(\n      environment.apiUrl + 'auth/login',\n      userForLoginDto\n    );\n  }\n\n  logout() {\n    this.localStorageService.remove('tokenModel');\n    this.localStorageService.remove('userMail');\n    this.store.dispatch(deleteUserDetail());\n  }\n\n  register(\n    userForRegisterDto: UserForRegisterDto\n  ): Observable<SingleResponseModel<TokenModel>> {\n    return this.httpClient.post<SingleResponseModel<TokenModel>>(\n      environment.apiUrl + 'auth/register',\n      userForRegisterDto\n    );\n  }\n\n  update(userDetailForUpdate: UserDetailForUpdate): Observable<ResponseModel> {\n    return this.httpClient.post<SingleResponseModel<TokenModel>>(\n      environment.apiUrl + 'auth/update',\n      userDetailForUpdate\n    );\n  }\n\n  isAuthenticated() {\n    if (localStorage.getItem('tokenModel')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isAuthorized(\n    userMail?: string | null,\n    requiredRoles?: string[]\n  ): Observable<ResponseModel> {\n    return this.httpClient.get<ResponseModel>(\n      environment.apiUrl + 'auth/isauthenticated',\n      {\n        params:\n          userMail && requiredRoles\n            ? {\n                userMail: userMail,\n                requiredRoles: requiredRoles.join(','),\n              }\n            : {},\n      }\n    );\n  }\n\n  setUserDetail(userDetailDto: UserDetailDto) {\n    this.store.dispatch(setUserDetail({ userDetailDto: userDetailDto }));\n  }\n\n  deleteUserDetail() {\n    this.store.dispatch(deleteUserDetail());\n  }\n}\n","import { createReducer, on } from '@ngrx/store';\r\nimport { setUserDetail, deleteUserDetail } from './auth.actions';\r\nimport { UserDetailDto } from '../../models/dtos/userDetailDto';\r\n\r\nexport interface AuthState {\r\n  userDetailDto?: UserDetailDto;\r\n}\r\n\r\nconst initialAuthState: AuthState = {\r\n  userDetailDto: undefined,\r\n};\r\n\r\nexport const AuthReducer = createReducer(\r\n  initialAuthState,\r\n  on(setUserDetail, (state: AuthState, { userDetailDto }) => ({\r\n    ...state,\r\n    userDetailDto: userDetailDto,\r\n  })),\r\n  on(deleteUserDetail, (state: AuthState) => ({\r\n    ...state,\r\n    userDetailDto: undefined,\r\n  }))\r\n);\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-4 mb-3\" *ngFor=\"let carDetail of carDetails \">\r\n        <div class=\"card\">\r\n            <img *ngIf=\"!carDetail.image.length;\" src=\"../../../assets/images/no-image.png\" class=\"card-img-top\"\r\n                width=\"100%\" height=\"200\">\r\n            <div *ngFor=\"let image of carDetail.image\">\r\n                <img *ngIf=\"image.isMain\" src=\"{{imageBasePath}}/{{image.imagePath}}\" class=\"card-img-top\" width=\"100%\"\r\n                    height=\"200\">\r\n            </div>\r\n            <div class=\"card-body pt-0 px-0\">\r\n                <div class=\"d-flex flex-row justify-content-between mb-0 px-3 mt-2\"> <small\r\n                        class=\"text-muted mt-1\">Günlük Fiyatı</small>\r\n                    <h6>{{carDetail.dailyPrice | currency:\"₺\" }}</h6>\r\n                </div>\r\n                <div class=\"d-flex flex-row justify-content-between mb-0 px-3 mt-2\"> <small\r\n                        class=\"text-muted mt-1\">Gerekli Findeks Puanı</small>\r\n                    <h6>{{carDetail.findeksScore}}</h6>\r\n                </div>\r\n                <div class=\"d-flex flex-row justify-content-between p-3 mid\">\r\n                    <div class=\"d-flex flex-column\">\r\n                        <p class=\"text-muted mb-1\">{{carDetail.brandName}}</p>\r\n                        <div class=\"d-flex flex-row\"><img src=\"https://imgur.com/iPtsG7I.png\" width=\"35px\"\r\n                                height=\"25px\">\r\n                            <div class=\"d-flex flex-column ml-1\"><small class=\"ghj\">{{carDetail.colorName}}</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex flex-column\"><small class=\"text-muted mb-2\">Model</small>\r\n                        <div class=\"d-flex flex-row\"><img src=\"https://imgur.com/J11mEBq.png\">\r\n                            <h6 class=\"ml-1\">{{carDetail.modelYear}}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mx-3 mt-3\"><button type=\"button\" class=\"btn btn-danger btn-block\"\r\n                        routerLink=\"/cars/detail/{{carDetail.carId}}\"><small>Detaylar</small></button></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CarDetailDto } from 'src/app/models/dtos/carDetailDto';\r\n\r\n@Component({\r\n  selector: 'app-car-card',\r\n  templateUrl: './car-card.component.html',\r\n  styleUrls: ['./car-card.component.css'],\r\n})\r\nexport class CarCardComponent implements OnInit {\r\n  @Input()\r\n  carDetails: CarDetailDto[] = [];\r\n  @Input()\r\n  imageBasePath: string;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UserDetailDto } from '../models/dtos/userDetailDto';\nimport { SingleResponseModel } from '../models/singleResponseModel';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient) {}\n\n  getUserDetailByEmail(\n    userMail: string\n  ): Observable<SingleResponseModel<UserDetailDto>> {\n    return this.httpClient.get<SingleResponseModel<UserDetailDto>>(\n      environment.apiUrl + 'users/getuserdetailbymail',\n      {\n        params: {\n          userMail: userMail,\n        },\n      }\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Payment } from '../models/entities/payment';\r\nimport { Rental } from '../models/entities/rental';\r\nimport { ResponseModel } from '../models/responseModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PaymentService {\r\n  rental: Rental;\r\n  totalPrice: number;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  addPayment(payment: Payment): Observable<ResponseModel> {\r\n    return this.httpClient.post<ResponseModel>(\r\n      environment.apiUrl + 'payments/add',\r\n      payment\r\n    );\r\n  }\r\n\r\n  getRental() {\r\n    return this.rental;\r\n  }\r\n\r\n  getTotalPrice() {\r\n    return this.totalPrice;\r\n  }\r\n\r\n  setRental(rental: Rental, totalPrice: number) {\r\n    this.rental = rental;\r\n    this.totalPrice = totalPrice;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { BrandComponent } from './components/admin/brand/brand.component';\r\nimport { CarDetailComponent } from './components/car/car-detail/car-detail.component';\r\nimport { CarComponent } from './components/car/car.component';\r\nimport { ColorComponent } from './components/admin/color/color.component';\r\nimport { CustomerComponent } from './components/admin/customer/customer.component';\r\nimport { RentalComponent } from './components/rental/rental.component';\r\nimport { PaymentComponent } from './components/payment/payment.component';\r\nimport { CarAddComponent } from './components/admin/car-admin/car-add/car-add.component';\r\nimport { BrandAddComponent } from './components/admin/brand/brand-add/brand-add.component';\r\nimport { ColorAddComponent } from './components/admin/color/color-add/color-add.component';\r\nimport { BrandUpdateComponent } from './components/admin/brand/brand-update/brand-update.component';\r\nimport { ColorUpdateComponent } from './components/admin/color/color-update/color-update.component';\r\nimport { CarAdminComponent } from './components/admin/car-admin/car-admin.component';\r\nimport { CarUpdateComponent } from './components/admin/car-admin/car-update/car-update.component';\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { LoginGuard } from './guards/login.guard';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { UpdateComponent } from './components/user/update/update.component';\r\nimport { AdminGuard } from './guards/admin.guard';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: CarComponent },\r\n  { path: 'about', component: AboutComponent },\r\n\r\n  {\r\n    path: 'admin',\r\n    canActivate: [LoginGuard, AdminGuard],\r\n    children: [\r\n      { path: 'brands', component: BrandComponent },\r\n      { path: 'brands/add', component: BrandAddComponent },\r\n      { path: 'brands/update/:brandId', component: BrandUpdateComponent },\r\n\r\n      { path: 'colors', component: ColorComponent },\r\n      { path: 'colors/add', component: ColorAddComponent },\r\n      { path: 'colors/update/:colorId', component: ColorUpdateComponent },\r\n\r\n      { path: 'cars', component: CarAdminComponent },\r\n      { path: 'cars/add', component: CarAddComponent },\r\n      { path: 'cars/update/:carId', component: CarUpdateComponent },\r\n\r\n      { path: 'customers', component: CustomerComponent },\r\n      { path: 'rentals', component: RentalComponent },\r\n    ],\r\n  },\r\n\r\n  { path: 'cars', component: CarComponent },\r\n  { path: 'cars/detail/:carId', component: CarDetailComponent },\r\n  { path: 'cars/:colorId/:brandId', component: CarComponent },\r\n  { path: 'cars/brand/:brandId', component: CarComponent },\r\n  { path: 'cars/color/:colorId', component: CarComponent },\r\n\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'update', component: UpdateComponent, canActivate: [LoginGuard] },\r\n  { path: 'payments', component: PaymentComponent, canActivate: [LoginGuard] },\r\n\r\n  { path: '**', component: NotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink=''>Car Rental</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=''>Anasayfa</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"about\">Hakkımızda</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"cars\">Arabalar</a>\r\n                </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav\" *ngIf=\"!(userDetailDto$ | async)\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"login\">Giriş</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"register\">Kayıt Ol</a>\r\n                </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav\" *ngIf=\"userDetailDto$ | async\">\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        {{ (userDetailDto$ | async)?.firstName }}\r\n                        {{ (userDetailDto$ | async)?.lastName }}\r\n                    </a>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a class=\"dropdown-item\" routerLink=\"admin/rentals\">Kiralamalar</a>\r\n                        <a class=\"dropdown-item\" routerLink=\"admin/brands\">Markalar</a>\r\n                        <a class=\"dropdown-item\" routerLink=\"admin/colors\">Renkler</a>\r\n                        <a class=\"dropdown-item\" routerLink=\"admin/cars\">Arabalar</a>\r\n                        <a class=\"dropdown-item\" routerLink=\"admin/customers\">Müşteriler</a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                        <a class=\"dropdown-item\" routerLink=\"update\">Bilgileri Güncelle</a>\r\n                        <a class=\"dropdown-item\" role=\"button\" (click)=\"logout()\">Çıkış Yap</a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { UserDetailDto } from 'src/app/models/dtos/userDetailDto';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navi',\r\n  templateUrl: './navi.component.html',\r\n  styleUrls: ['./navi.component.css'],\r\n})\r\nexport class NaviComponent implements OnInit {\r\n  userDetailDto$: Observable<UserDetailDto | undefined> = this.authService\r\n    .userDetailDto$;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastrService: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.toastrService.info('Çıkış yaptınız');\r\n    setTimeout(() => {\r\n      this.router.navigate(['']);\r\n    }, 1000);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Brand } from 'src/app/models/entities/brand';\nimport { Car } from 'src/app/models/entities/car';\nimport { Color } from 'src/app/models/entities/color';\nimport { BrandService } from 'src/app/services/brand.service';\nimport { CarService } from 'src/app/services/car.service';\nimport { ColorService } from 'src/app/services/color.service';\n\n@Component({\n  selector: 'app-car-update',\n  templateUrl: './car-update.component.html',\n  styleUrls: ['./car-update.component.css'],\n})\nexport class CarUpdateComponent implements OnInit {\n  carUpdateForm: FormGroup;\n  colors: Color[] = [];\n  brands: Brand[] = [];\n  car: Car;\n  brandLoaded: boolean = false;\n  colorLoaded: boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private carService: CarService,\n    private brandService: BrandService,\n    private colorService: ColorService,\n    private activatedRoute: ActivatedRoute,\n    private toastrService: ToastrService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params) => {\n      if (params['carId']) {\n        this.getCarById(params['carId']);\n        this.getBrands();\n        this.getColors();\n      }\n    });\n  }\n\n  createCarUpdateForm(car: Car) {\n    this.carUpdateForm = this.formBuilder.group({\n      carId: [car.carId, Validators.required],\n      brandId: [car.brandId, Validators.required],\n      colorId: [car.colorId, Validators.required],\n      modelYear: [car.modelYear, Validators.required],\n      dailyPrice: [car.dailyPrice, Validators.required],\n      findeksScore: [\n        car.findeksScore,\n        [Validators.required, Validators.min(0), Validators.max(2500)],\n      ],\n      description: [car.description, Validators.required],\n    });\n  }\n\n  getCarById(carId: number) {\n    this.carService.getCarById(carId).subscribe((response) => {\n      this.car = response.data;\n      this.createCarUpdateForm(this.car);\n    });\n  }\n\n  update() {\n    if (this.carUpdateForm.valid) {\n      let carModel = Object.assign({}, this.carUpdateForm.value);\n      this.carService.update(carModel).subscribe(\n        (response) => {\n          setTimeout(() => {\n            this.router.navigate(['admin/cars']);\n          }, 1000);\n          this.toastrService.success(response.message, 'Başarılı');\n        },\n        (responseError) => {\n          if (responseError.error.Errors.length > 0) {\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\n              this.toastrService.error(\n                responseError.error.Errors[i].ErrorMessage,\n                'Doğrulama hatası'\n              );\n            }\n          }\n        }\n      );\n    } else {\n      this.toastrService.error(\n        'Girdiğiniz bilgiler hatalı veya zorunlu alanları doldurmadınız',\n        'Uyarı'\n      );\n    }\n  }\n\n  delete() {\n    this.carService.delete(this.car).subscribe(\n      (response) => {\n        setTimeout(() => {\n          this.router.navigate(['admin/cars']);\n        }, 1000);\n        this.toastrService.info(response.message, 'Başarılı');\n      },\n      (responseError) => {\n        if (responseError.error.Errors.length > 0) {\n          for (let i = 0; i < responseError.error.Errors.length; i++) {\n            this.toastrService.error(\n              responseError.error.Errors[i].ErrorMessage,\n              'Doğrulama hatası'\n            );\n          }\n        }\n      }\n    );\n  }\n\n  getBrands() {\n    this.brandService.getBrands().subscribe((response) => {\n      this.brands = response.data;\n      this.brandLoaded = true;\n    });\n  }\n\n  getColors() {\n    this.colorService.getColors().subscribe((response) => {\n      this.colors = response.data;\n      this.colorLoaded = true;\n    });\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n    <div *ngIf=\"!brandLoaded !colorLoaded\" class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n<div class=\"content\" *ngIf='brandLoaded colorLoaded'>\n    <div class=\"row\" *ngIf='car'>\n        <div class=\"col-md-3 \"></div>\n        <div class=\"col-md-6 \">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <div class=\"row\">\n                        <div class=\"col-md-9\">\n                            <h5 class=\"title\">Araç Güncelle</h5>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <app-car-images></app-car-images>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-body\">\n                    <form [formGroup]=\"carUpdateForm\">\n                        <div class=\"mb3\">\n                            <label for=\"brandId\" class=\"form-label\">Brand</label>\n                            <select class=\"form-control form-select mb-3\" name=\"brandId\" id=\"brandId\" type=\"number\"\n                                formControlName=\"brandId\" aria-label=\".form-select-lg example\">\n                                <option *ngFor=\"let brand of brands\" [ngValue]=\"brand.brandId\">{{brand.brandName}}\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"mb3\">\n                            <label for=\"colorId\" class=\"form-label\">Color</label>\n                            <select class=\"form-control form-select mb-3\" name=\"colorId\" id=\"colorId\"\n                                formControlName=\"colorId\" aria-label=\".form-select-lg example\">\n                                <option *ngFor=\"let color of colors\" [ngValue]=\"color.colorId\">{{color.colorName}}\n                                </option>\n                            </select>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"modelYear\">Model Year</label>\n                            <div class=\"form-group\">\n                                <input type=\"number\" id=\"modelYear\" formControlName=\"modelYear\" placeholder=\"Model Year\"\n                                    class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"dailyPrice\">Daily Price</label>\n                            <div class=\"form-group\">\n                                <input type=\"number\" id=\"dailyPrice\" formControlName=\"dailyPrice\"\n                                    placeholder=\"Daily Price\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"findeksScore\">Findeks Score</label>\n                            <div class=\"form-group\">\n                                <input type=\"number\" id=\"findeksScore\" formControlName=\"findeksScore\"\n                                    placeholder=\"Findeks Score\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"description\" class=\"fore-label\">Description</label>\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"description\" formControlName=\"description\"\n                                    placeholder=\"Description\" class=\"form-control\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-fill btn-success\" (click)=\"update()\">Güncelle</button>\n                    <button class=\"btn btn-fill btn-danger float-right\" (click)=\"delete()\">Sil</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserForRegisterDto } from 'src/app/models/dtos/userForRegisterDto';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private userService: UserService,\n    private toastrService: ToastrService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      companyName: ['', Validators.required]\n    });\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      let registerModel: UserForRegisterDto = Object.assign(\n        {},\n        this.registerForm.value\n      );\n      this.authService.register(registerModel).subscribe(\n        (response) => {\n          this.localStorageService.set('tokenModel', response.data);\n          this.localStorageService.set(\n            'userMail',\n            this.registerForm.get('email')?.value\n          );\n          this.getUserDetailByEmail(this.registerForm.get('email')?.value);\n          this.toastrService.info(\n            'Anasayfaya yönlendiriliyorsunuz.',\n            'Kayıt başarılı'\n          );\n          setTimeout(() => {\n            this.router.navigate(['']);\n          }, 1000);\n        },\n        (responseError) => {\n          if (responseError.error.Errors.length > 0) {\n            for (let i = 0; i < responseError.error.Errors.length; i++) {\n              this.toastrService.error(\n                responseError.error.Errors[i].ErrorMessage,\n                'Doğrulama hatası'\n              );\n            }\n          }\n        }\n      );\n    } else {\n      this.toastrService.error('Tüm alanları doldurmak zorunludur', 'Uyarı');\n    }\n  }\n\n  getUserDetailByEmail(mail: string) {\n    this.userService.getUserDetailByEmail(mail).subscribe((response) => {\n      this.authService.setUserDetail(response.data);\n    });\n  }\n}\n","<div class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-md-3 \"></div>\n        <div class=\"col-md-6 \">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5 class=\"title\">Kayıt Ol</h5>\n                </div>\n\n                <div class=\"card-body\">\n                    <form [formGroup]=\"registerForm\">\n\n                        <div class=\"mb-3\">\n                            <label for=\"firstName\" class=\"sr-only\">Adınız</label>\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"firstName\" formControlName=\"firstName\" placeholder=\"First Name\"\n                                    class=\"form-control\" />\n                            </div>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <label for=\"lastName\" class=\"sr-only\">Soyadınız</label>\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"lastName\" formControlName=\"lastName\" placeholder=\"Last Name\"\n                                    class=\"form-control\" />\n                            </div>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <label for=\"companyName\" class=\"sr-only\">Şirket Adı</label>\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"companyName\" formControlName=\"companyName\" placeholder=\"Company Name\"\n                                    class=\"form-control\" />\n                            </div>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <label for=\"email\" class=\"sr-only\">E-Mail</label>\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"email\" formControlName=\"email\" placeholder=\"E-Mail\"\n                                    class=\"form-control\" />\n                            </div>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <label for=\"password\" class=\"sr-only\">Şifre</label>\n                            <div class=\"form-group\">\n                                <input type=\"password\" id=\"password\" formControlName=\"password\" placeholder=\"Password\"\n                                    class=\"form-control\" />\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-fill btn-danger\" (click)='register()'>Kayıt Ol</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}